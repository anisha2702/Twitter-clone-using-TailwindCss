/*! tailwindcss v4.1.0 | MIT License | https://tailwindcss.com */
@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
  @layer base {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
    }
  }
}
.absolute {
  position: absolute;
}
.sticky {
  position: sticky;
}
.top-\[50vh\] {
  top: 50vh;
}
.top-\[84vh\] {
  top: 84vh;
}
.left-\[19\%\] {
  left: 19%;
}
.z-10 {
  z-index: 10;
}
.m-auto {
  margin: auto;
}
.mx-auto {
  margin-inline: auto;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.h-\[0\.2px\] {
  height: 0.2px;
}
.h-\[1px\] {
  height: 1px;
}
.w-1\/2 {
  width: calc(1/2 * 100%);
}
.w-\[60px\] {
  width: 60px;
}
.w-\[90\%\] {
  width: 90%;
}
.w-fit {
  width: fit-content;
}
.w-full {
  width: 100%;
}
.cursor-pointer {
  cursor: pointer;
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.self-start {
  align-self: flex-start;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border-\[1px\] {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-x-0 {
  border-inline-style: var(--tw-border-style);
  border-inline-width: 0px;
}
.bg-\[\#1d9bf0\] {
  background-color: #1d9bf0;
}
.bg-\[\#16181c\] {
  background-color: #16181c;
}
.text-center {
  text-align: center;
}
.opacity-80 {
  opacity: 80%;
}
.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.hover\:cursor-pointer {
  &:hover {
    @media (hover: hover) {
      cursor: pointer;
    }
  }
}
.hover\:rounded-full {
  &:hover {
    @media (hover: hover) {
      border-radius: calc(infinity * 1px);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
